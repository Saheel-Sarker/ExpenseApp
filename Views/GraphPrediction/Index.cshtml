@model IEnumerable<ExpenseApp.Models.Transaction>

@{
    ViewData["Title"] = "Index";
}

<head>
    <!-- Other head elements -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>

<div class="container-fluid" style="margin-top: 2.5%">
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="widget widget-green">
                <span class="fw-bold">🟩 Total Income: $@ViewBag.TotalIncome</span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="widget widget-red">
                <span class="fw-bold">🟥 Total Expense: $@ViewBag.TotalExpense</span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="widget widget-blue">
                @if ((decimal)ViewBag.Earnings < 0)
                {
                    <span class="fw-bold">🟦 Earnings: -$@Math.Abs((decimal)ViewBag.Earnings)</span>
                }
                else
                {
                    <span class="fw-bold">🟦 Earnings: $@ViewBag.Earnings</span>
                }
            </div>
        </div>
    </div>
    <div class="row mb-8" style="height: 650px">
        <div class="widget" style="max-width: 98.5%; margin: 0 auto; max-height:630px">
            <h2 style="text-align:center; margin-top: 1% ">Predicted Transactions for the next: (@ViewBag.Days Days)</h2>

            <form asp-action="Index" method="post" style="margin-inline: 35%; margin: 0 auto;display: flex; justify-content: center; width: 100%;">
@*                 <div class="form-group input-group text-danger" style="margin-top:0%">
                    <input type="number" class="form-control text-white" style="background-color: #202126" id="days" name="days" required placeholder="Enter number of days here" />
                    <span class="input-group-btn" style="margin-left:2%">
                        <button type="submit" class="btn btn-outline-success" style="color: white; text-decoration: none;">Create</button>
                    </span>
                </div> *@
                <div class="form-group input-group text-danger" style="margin-top: 0%; display: flex; justify-content: flex-end; width:275px">
                    <input type="number" class="form-control text-white" style="background-color: #202126; border-top-right-radius: 0; border-bottom-right-radius: 0;" id="days" name="days" required placeholder="Enter number of days here" />
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-outline-success" style="color: white; text-decoration: none; border-top-left-radius: 0; border-bottom-left-radius: 0;">
                            <i class="fas fa-search"></i>
                        </button>
                    </span>
                </div>
            </form>
            <div>
                <canvas height="425px" id="myChart"></canvas>
            </div>
        </div>
    </div>
</div>


<div class="table-container" style="max-width: 900px;margin: 0 auto; margin-top: 0px">

    <table class="table text-white">
        <thead>
            <tr>
                <th class="text-white" style="width: 20%;">

                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSort" asp-route-days="@ViewBag.Days">
                        Date and Time
                        @if (ViewBag.CurrentSort as string == "Date_desc")
                        {
                            <span class="sort-arrow">&#9650;</span> <!-- Down arrow -->
                        }
                        else if (ViewBag.CurrentSort as string == null)
                        {
                            <span class="sort-arrow">&#9660;</span> <!-- Up arrow -->
                        }
                    </a>
                </th>
                <th class="text-white" style="width: 20%;">
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.CategorySort" asp-route-days="@ViewBag.Days">
                        Category
                        @if (ViewBag.CurrentSort as string == "Category")
                        {
                            <span class="sort-arrow">&#9660;</span> <!-- Up arrow -->
                        }
                        else if (ViewBag.CurrentSort as string == "Category_desc")
                        {
                            <span class="sort-arrow">&#9650;</span> <!-- Down arrow -->
                        }
                    </a>
                </th>
                <th class="text-white" style="width: 20%;">
                    
                    <a asp-action="Index" asp-route-sortOrder="@ViewBag.AmountSort" asp-route-days="@ViewBag.Days">
                        Amount
                        @if (ViewBag.CurrentSort as string == "Amount_desc")
                        {
                            <span class="sort-arrow">&#9650;</span> <!-- Down arrow -->
                        }
                        else if (ViewBag.CurrentSort as string == "Amount")
                        {
                            <span class="sort-arrow">&#9660;</span> <!-- Up arrow -->
                        }
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="highlight-row">
                    <td class="text-white">
                        @Html.DisplayFor(modelItem => item.DateTime)

                    </td>
                    <td class="text-white">

                        @if (item.Category.IsExpense)
                        {
                            <div>🟥 @Html.DisplayFor(modelItem => item.Category.Title)</div>
                        }
                        else
                        {
                            <div>🟩 @Html.DisplayFor(modelItem => item.Category.Title)</div>
                        }

                    </td>
                    <td class="text-white">
                        $@item.Amount
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var expenseDates = @Html.Raw(Json.Serialize(ViewBag.ExpenseDates));
    var incomeDates = @Html.Raw(Json.Serialize(ViewBag.IncomeDates));

    var dates = Object.keys(expenseDates).concat(Object.keys(incomeDates));
    dates = dates.filter((v, i, a) => a.indexOf(v) === i).sort();

    // Convert dates to 'YYYY-MM-DD' format
    var formattedDates = dates.map(function (date) {
        var currentDate = new Date(date);
        var month = currentDate.getMonth() + 1; // Months are zero-indexed, so add 1
        var day = currentDate.getDate();
        return ('0' + month).slice(-2) + '-' + ('0' + day).slice(-2); // Ensure leading zeros
    });

    var expenseData = dates.map(function (date) {
        return expenseDates[date] || 0;
    });

    var incomeData = dates.map(function (date) {
        return incomeDates[date] || 0;
    });

    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: formattedDates,
            datasets: [{
                label: 'Income',
                data: incomeData,
                borderColor: '#249515',
                fill: false,
            }, {
                label: 'Expense',
                data: expenseData,
                borderColor: 'red',
                fill: false,
            }]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Predicted Income vs Expense'
            },
            scales: {
                xAxes: [{
                    type: 'time',
                    time: {
                        unit: 'day',
                        displayFormats: {
                            day: 'YYYY-MM-DD'
                        }
                    },
                    scaleLabel: {
                        display: true,
                        labelString: 'Date'
                    }
                }],
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Amount'
                    }
                }]
            }
        }
    });
</script>

<script>
    function clearInputValue(input) {
        if (input.value === '0') {
            input.value = '';
        }
    }
</script>